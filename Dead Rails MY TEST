local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local localPlayer = Players.LocalPlayer;
local uiLibrary = loadstring(game:HttpGet('https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua'))()
local mainWindow = uiLibrary.CreateLib('By Heny', 'DarkTheme')
local isItemEspEnabled = false;
local isItemNameTagsEnabled = false;
local isEnemyEspEnabled = false;
local isEnemyNameTagsEnabled = false;
local showEnemyStatus = false;
local nameTagSize = 14;
local itemHighlightColor = Color3.fromRGB(255, 255, 255)
local enemyHighlightColor = Color3.fromRGB(255, 0, 0)
local itemNameColor = Color3.fromRGB(255, 255, 255)
local enemyNameColor = Color3.fromRGB(255, 255, 255)
local isBondFarmEnabled = false;
local isOutlawFarmEnabled = false;
local selectedTeleportItem = nil;
local function getCharacterStatus(character)
	local humanoid = character:FindFirstChildOfClass('Humanoid')
	if humanoid then
		return humanoid.Health > 0 and 'Alive' or 'Dead'
	end;
	return 'Unknown'
end;
local function applyHighlight(target, color)
	local highlight = target:FindFirstChild('Highlight')
	if not highlight then
		highlight = Instance.new('Highlight')
		highlight.Parent = target
	end;
	highlight.FillColor = color
end;
local function removeHighlight(target)
	local highlight = target:FindFirstChild('Highlight')
	if highlight then
		highlight:Destroy()
	end
end;
local function createOrUpdateNameTag(target, color, shouldShowStatus)
	local nameTagGui = target:FindFirstChild('NameTag')
	local textLabel;
	if not nameTagGui then
		nameTagGui = Instance.new('BillboardGui')
		nameTagGui.Name = 'NameTag'
		nameTagGui.Size = UDim2.new(0, 200, 0, 50)
		nameTagGui.Adornee = target;
		nameTagGui.AlwaysOnTop = true;
		nameTagGui.ClipsDescendants = false;
		nameTagGui.Parent = target;
		textLabel = Instance.new('TextLabel')
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.BackgroundTransparency = 1;
		textLabel.TextStrokeTransparency = 0;
		textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
		textLabel.Parent = nameTagGui
	else
		textLabel = nameTagGui:FindFirstChildOfClass('TextLabel')
	end;
	if textLabel then
		textLabel.TextColor3 = color;
		textLabel.TextSize = nameTagSize;
		if shouldShowStatus and showEnemyStatus then
			textLabel.Text = target.Name .. ' [' .. getCharacterStatus(target) .. ']'
		else
			textLabel.Text = target.Name
		end
	end
end;
local function removeNameTag(target)
	local nameTagGui = target:FindFirstChild('NameTag')
	if nameTagGui then
		nameTagGui:Destroy()
	end
end;
local function updateAllItemEsp()
	for _, item in ipairs(Workspace.RuntimeItems:GetChildren()) do
		if isItemEspEnabled then
			applyHighlight(item, itemHighlightColor)
		else
			removeHighlight(item)
		end;
		if isItemNameTagsEnabled then
			createOrUpdateNameTag(item, itemNameColor, false)
		else
			removeNameTag(item)
		end
	end
end;
local function updateAllEnemyEsp()
	for _, enemy in ipairs(Workspace.RuntimeEnemies:GetChildren()) do
		if isEnemyEspEnabled then
			applyHighlight(enemy, enemyHighlightColor)
		else
			removeHighlight(enemy)
		end;
		if isEnemyNameTagsEnabled then
			createOrUpdateNameTag(enemy, enemyNameColor, true)
		else
			removeNameTag(enemy)
		end
	end
end;
Workspace.RuntimeItems.ChildAdded:Connect(function(item)
	if isItemEspEnabled then
		applyHighlight(item, itemHighlightColor)
	end;
	if isItemNameTagsEnabled then
		createOrUpdateNameTag(item, itemNameColor, false)
	end
end)
Workspace.RuntimeEnemies.ChildAdded:Connect(function(enemy)
	if isEnemyEspEnabled then
		applyHighlight(enemy, enemyHighlightColor)
	end;
	if isEnemyNameTagsEnabled then
		createOrUpdateNameTag(enemy, enemyNameColor, true)
	end
end)
local espTab = mainWindow:NewTab('ESP')
local itemEspSection = espTab:NewSection('Item ESP')
itemEspSection:NewToggle('Enable Item ESP', 'Toggles item highlighting', function(enabled)
	isItemEspEnabled = enabled;
	updateAllItemEsp()
end)
itemEspSection:NewToggle('Show Item Names', 'Toggles item name display', function(enabled)
	isItemNameTagsEnabled = enabled;
	updateAllItemEsp()
end)
itemEspSection:NewColorPicker('Highlight Color', 'Change the highlight color', itemHighlightColor, function(color)
	itemHighlightColor = color;
	updateAllItemEsp()
end)
itemEspSection:NewColorPicker('Item Name Color', 'Change the item name color', itemNameColor, function(color)
	itemNameColor = color;
	updateAllItemEsp()
end)
itemEspSection:NewSlider('Name Size', 'Change the name display size', 10, 50, nameTagSize, function(size)
	nameTagSize = size;
	updateAllItemEsp()
end)
local enemyEspSection = espTab:NewSection('Enemy ESP')
enemyEspSection:NewToggle('Enable Enemy ESP', 'Toggles enemy highlighting', function(enabled)
	isEnemyEspEnabled = enabled;
	updateAllEnemyEsp()
end)
enemyEspSection:NewToggle('Show Enemy Names', 'Toggles enemy name display', function(enabled)
	isEnemyNameTagsEnabled = enabled;
	updateAllEnemyEsp()
end)
enemyEspSection:NewColorPicker('Enemy Highlight Color', 'Change the enemy highlight color', enemyHighlightColor, function(color)
	enemyHighlightColor = color;
	updateAllEnemyEsp()
end)
enemyEspSection:NewColorPicker('Enemy Name Color', 'Change the enemy name color', enemyNameColor, function(color)
	enemyNameColor = color;
	updateAllEnemyEsp()
end)
enemyEspSection:NewToggle('Show Enemy Status', 'Shows if an enemy is Alive or Dead', function(enabled)
	showEnemyStatus = enabled;
	updateAllEnemyEsp()
end)
local teleportTab = mainWindow:NewTab('Teleport')
local trainTeleportSection = teleportTab:NewSection('Train Teleport')
local selectedSpecialItem = nil;
local fuelItems = {
	'Runner',
	'Walker',
	'Vampire'
}
trainTeleportSection:NewButton('Teleport to Train', 'Teleports you to a specific part of the train', function()
	local trainPart = Workspace.Train and Workspace.Train.Train:GetChildren()[47]
	if trainPart then
		localPlayer.Character:SetPrimaryPartCFrame(trainPart.CFrame)
	else
		print('Train part not found.')
	end
end)
trainTeleportSection:NewDropdown("Select Fuel to Teleport", 'Choose a fuel item to teleport', fuelItems, function(item)
	selectedSpecialItem = item
end)
trainTeleportSection:NewButton('Teleport Selected Fuel', 'Teleports the selected fuel item to you', function()
	if selectedSpecialItem then
		local itemInstance = Workspace.RuntimeItems:FindFirstChild(selectedSpecialItem)
		if itemInstance and itemInstance.PrimaryPart then
			itemInstance:SetPrimaryPartCFrame(localPlayer.Character.PrimaryPart.CFrame)
		else
			print('Selected item not found or has no PrimaryPart!')
		end
	else
		print('Please select a fuel item first.')
	end
end)
trainTeleportSection:NewButton('Teleport ALL Fuel', 'Teleports all fuel items to you', function()
	for _, itemName in ipairs(fuelItems) do
		local itemInstance = Workspace.RuntimeItems:FindFirstChild(itemName)
		if itemInstance and itemInstance.PrimaryPart then
			itemInstance:SetPrimaryPartCFrame(localPlayer.Character.PrimaryPart.CFrame)
		end
	end
end)
local function bondTeleportLoop()
	while isBondFarmEnabled do
		for _, item in ipairs(Workspace.RuntimeItems:GetChildren()) do
			if item.Name == 'Bond' and item.PrimaryPart and localPlayer.Character and localPlayer.Character.PrimaryPart then
				local playerRoot = localPlayer.Character.PrimaryPart;
				local targetPosition = playerRoot.Position + (playerRoot.CFrame.LookVector * 3)
				item:SetPrimaryPartCFrame(CFrame.new(targetPosition))
			end
		end;
		task.wait(0.001)
	end
end;
local function bondInteractLoop()
	while isBondFarmEnabled do
		VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, nil)
		task.wait(0.001)
	end
end;
local function outlawTeleportLoop()
	while isOutlawFarmEnabled do
		for _, item in ipairs(Workspace.RuntimeItems:GetChildren()) do
			if (item.Name == 'ShotgunOutlaw' or item.Name == 'RifleOutlaw') and item.PrimaryPart and localPlayer.Character and localPlayer.Character.PrimaryPart then
				local targetPosition = localPlayer.Character.PrimaryPart.Position + Vector3.new(0, 5, 0)
				item:SetPrimaryPartCFrame(CFrame.new(targetPosition))
			end
		end;
		task.wait(0.1)
	end
end;
local function getItemList()
	local itemList = {}
	for _, item in ipairs(Workspace.RuntimeItems:GetChildren()) do
		table.insert(itemList, item.Name)
	end;
	return itemList
end;
local farmTab = mainWindow:NewTab('Farm')
local itemTeleportSection = farmTab:NewSection('Item Teleport')
local itemDropdown = itemTeleportSection:NewDropdown('Select Item to Teleport', 'Choose any item to teleport to you', getItemList(), function(item)
	selectedTeleportItem = item
end)
itemTeleportSection:NewButton('Refresh Item List', 'Refresh the dropdown with current items', function()
	itemDropdown:Refresh(getItemList())
end)
itemTeleportSection:NewButton('Teleport Selected Item', 'Teleports the selected item to you', function()
	if selectedTeleportItem then
		local itemInstance = Workspace.RuntimeItems:FindFirstChild(selectedTeleportItem)
		if itemInstance and itemInstance.PrimaryPart and localPlayer.Character and localPlayer.Character.PrimaryPart then
			task.wait(0.01)
			itemInstance:SetPrimaryPartCFrame(localPlayer.Character.PrimaryPart.CFrame)
			ReplicatedStorage.Shared.Remotes.Drag.RequestStopDrag:FireServer()
		else
			print('Selected item not found or is missing a PrimaryPart!')
		end
	else
		print('Please select an item first.')
	end
end)
local bondFarmSection = farmTab:NewSection('Farm Bond')
bondFarmSection:NewToggle('Auto Farm Bond', "Automatically teleports and collects 'Bond' items", function(enabled)
	isBondFarmEnabled = enabled;
	if enabled then
		task.spawn(bondTeleportLoop)
		task.spawn(bondInteractLoop)
	end
end)
local outlawFarmSection = farmTab:NewSection('Farm Outlaw')
outlawFarmSection:NewToggle('Auto Farm Outlaw', "Automatically teleports 'Outlaw' items above you", function(enabled)
	isOutlawFarmEnabled = enabled;
	if enabled then
		task.spawn(outlawTeleportLoop)
	end
end)
