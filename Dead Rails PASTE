local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local localPlayer = Players.LocalPlayer;
local camera = Workspace.CurrentCamera;
local isAimbotEnabled = false;
local isEspEnabled = false;
local targetList = {}
local espObjects = {}
local aimbotRaycastParams = RaycastParams.new()
aimbotRaycastParams.FilterType = Enum.RaycastFilterType.Blacklist;
local function isValidTarget(instance)
	if instance and instance:IsA("Model") and instance:FindFirstChild("Humanoid") then
		return instance.Humanoid.Health > 0 and instance:FindFirstChild("Head") and instance:FindFirstChild("HumanoidRootPart") and not Players:GetPlayerFromCharacter(instance)
	end;
	return false
end;
local function updateTargetList()
	local currentTargets = {}
	for _, descendant in ipairs(Workspace:GetDescendants()) do
		if isValidTarget(descendant) then
			currentTargets[descendant] = true
		end
	end;
	for i = #targetList, 1, -1 do
		if not currentTargets[targetList[i]] then
			table.remove(targetList, i)
		end
	end;
	for target, _ in pairs(currentTargets) do
		if not table.find(targetList, target) then
			table.insert(targetList, target)
		end
	end
end;
local function predictTargetPosition(target)
	local rootPart = target:FindFirstChild("HumanoidRootPart")
	local head = target:FindFirstChild("Head")
	if not rootPart or not head then
		return (head and head.Position) or (rootPart and rootPart.Position)
	end;
	local predictionTime = 0.02;
	local predictedRootPosition = rootPart.Position + (rootPart.Velocity * predictionTime)
	local headOffset = head.Position - rootPart.Position;
	return predictedRootPosition + headOffset
end;
local function getClosestTargetToCrosshair()
	local closestTarget = nil;
	local minimumDistance = math.huge;
	local viewportCenter = camera.ViewportSize / 2;
	aimbotRaycastParams.FilterDescendantsInstances = {
		localPlayer.Character
	}
	for _, target in ipairs(targetList) do
		local predictedPosition = predictTargetPosition(target)
		local screenPosition, onScreen = camera:WorldToViewportPoint(predictedPosition)
		if onScreen and screenPosition.Z > 0 then
			local raycastResult = Workspace:Raycast(camera.CFrame.Position, (predictedPosition - camera.CFrame.Position).Unit * 1000, aimbotRaycastParams)
			if raycastResult and raycastResult.Instance:IsDescendantOf(target) then
				local distanceToCenter = (Vector2.new(screenPosition.X, screenPosition.Y) - viewportCenter).Magnitude;
				if distanceToCenter < minimumDistance then
					minimumDistance = distanceToCenter;
					closestTarget = target
				end
			end
		end
	end;
	return closestTarget
end;
local function aimAtPosition(position)
	local cameraCFrame = camera.CFrame;
	local targetDirection = (position - cameraCFrame.Position).Unit;
	local smoothness = 0.581;
	local newLookVector = cameraCFrame.LookVector:Lerp(targetDirection, smoothness)
	camera.CFrame = CFrame.new(cameraCFrame.Position, cameraCFrame.Position + newLookVector)
end;
local function createEspElements(target, color)
	if not target or not target.PrimaryPart or espObjects[target] then
		return
	end;
	local highlight = Instance.new("Highlight")
	highlight.Name = "ESP_Highlight"
	highlight.Adornee = target;
	highlight.FillColor = color;
	highlight.OutlineColor = color;
	highlight.Parent = target;
	local billboard = Instance.new("BillboardGui")
	billboard.Name = "ESP_Billboard"
	billboard.Adornee = target.PrimaryPart;
	billboard.Size = UDim2.new(0, 200, 0, 50)
	billboard.StudsOffset = Vector3.new(0, 5, 0)
	billboard.AlwaysOnTop = true;
	billboard.Parent = target;
	local textLabel = Instance.new("TextLabel")
	textLabel.Text = target.Name;
	textLabel.Size = UDim2.new(1, 0, 1, 0)
	textLabel.TextColor3 = color;
	textLabel.BackgroundTransparency = 1;
	textLabel.TextSize = 7;
	textLabel.Parent = billboard;
	espObjects[target] = {
		Highlight = highlight,
		Billboard = billboard
	}
end;
local function clearAllEsp()
	for target, elements in pairs(espObjects) do
		if elements.Highlight then
			elements.Highlight:Destroy()
		end;
		if elements.Billboard then
			elements.Billboard:Destroy()
		end
	end;
	espObjects = {}
end;
local function updateAllEsp()
	clearAllEsp()
	if Workspace:FindFirstChild("RuntimeItems") then
		for _, item in ipairs(Workspace.RuntimeItems:GetDescendants()) do
			if item:IsA("Model") then
				createEspElements(item, Color3.new(1, 0, 0))
			end
		end
	end;
	local centerBaseplate = Workspace.Baseplates and #Workspace.Baseplates:GetChildren() >= 2 and Workspace.Baseplates:GetChildren()[2]:FindFirstChild("CenterBaseplate")
	if centerBaseplate and centerBaseplate:FindFirstChild("Animals") then
		for _, animal in ipairs(centerBaseplate.Animals:GetDescendants()) do
			if animal:IsA("Model") then
				createEspElements(animal, Color3.new(1, 0, 1))
			end
		end
	end;
	if Workspace:FindFirstChild("NightEnemies") then
		for _, enemy in ipairs(Workspace.NightEnemies:GetDescendants()) do
			if enemy:IsA("Model") then
				createEspElements(enemy, Color3.new(0, 0, 1))
			end
		end
	end;
	local zombiesFolder = Workspace:FindFirstChild("RandomBuildings") and Workspace.RandomBuildings:FindFirstChild("DestroyedHouse") and Workspace.RandomBuildings.DestroyedHouse:FindFirstChild("StandaloneZombiePart")
	if zombiesFolder then
		zombiesFolder = zombiesFolder:FindFirstChild("Zombies")
		if zombiesFolder then
			for _, zombie in ipairs(zombiesFolder:GetChildren()) do
				if zombie:IsA("Model") then
					createEspElements(zombie, Color3.new(0, 1, 0))
				end
			end
		end
	end
end;
local function espLoop()
	while isEspEnabled do
		updateAllEsp()
		task.wait(1)
	end
end;
local function getItemNameList()
	local itemNames = {}
	local runtimeItems = Workspace:FindFirstChild("RuntimeItems")
	if runtimeItems then
		for _, item in ipairs(runtimeItems:GetDescendants()) do
			if item:IsA("Model") then
				table.insert(itemNames, item.Name)
			end
		end
	else
		warn("RuntimeItems folder not found!")
	end;
	return itemNames
end;
local uiLibrary = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local mainWindow = uiLibrary:CreateWindow({
	Name = "MoonLight | Dead Rails",
	LoadingTitle = "Loading",
	LoadingSubtitle = "by Heny",
	ConfigurationSaving = {
		Enabled = true,
		FileName = "MoonHub_DeadRails"
	}
})
local aimbotTab = mainWindow:CreateTab("Aimbot", 4483362458)
aimbotTab:CreateToggle({
	Name = "Enable Aimbot",
	CurrentValue = false,
	Flag = "AimbotToggle",
	Callback = function(enabled)
		isAimbotEnabled = enabled
	end
})
local collectionTab = mainWindow:CreateTab("Collection", 4483362458)
local itemDropdown = collectionTab:CreateDropdown({
	Name = "Select Item",
	Options = getItemNameList(),
	CurrentOption = "Select an item",
	Flag = "ItemDropdown"
})
collectionTab:CreateButton({
	Name = "Refresh Items",
	Callback = function()
		itemDropdown:Refresh(getItemNameList())
	end
})
collectionTab:CreateButton({
	Name = "Collect Selected Item",
	Callback = function()
		local selectedItemName = itemDropdown.CurrentOption;
		if selectedItemName == "Select an item" then
			warn("No item selected!")
			return
		end;
		local runtimeItems = Workspace:FindFirstChild("RuntimeItems")
		local playerCharacter = localPlayer.Character or localPlayer.CharacterAdded:Wait()
		local rootPart = playerCharacter:WaitForChild("HumanoidRootPart")
		local itemToCollect = runtimeItems and runtimeItems:FindFirstChild(selectedItemName, true)
		if itemToCollect and itemToCollect.PrimaryPart then
			itemToCollect:SetPrimaryPartCFrame(rootPart.CFrame + Vector3.new(0, 2, 0))
			print("Collected:", itemToCollect.Name)
		else
			warn("Item not found or it has no PrimaryPart:", selectedItemName)
		end
	end
})
collectionTab:CreateButton({
	Name = "Collect All Items",
	Callback = function()
		local runtimeItems = Workspace:FindFirstChild("RuntimeItems")
		if not runtimeItems then
			warn("RuntimeItems folder not found!")
			return
		end;
		local playerCharacter = localPlayer.Character or localPlayer.CharacterAdded:Wait()
		local rootPart = playerCharacter:WaitForChild("HumanoidRootPart")
		for _, item in ipairs(runtimeItems:GetDescendants()) do
			if item:IsA("Model") and item.PrimaryPart then
				local offset = rootPart.CFrame.LookVector * 5;
				item:SetPrimaryPartCFrame(rootPart.CFrame + offset)
			else
				warn(item.Name .. " has no PrimaryPart and cannot be moved.")
			end
		end
	end
})
local espTab = mainWindow:CreateTab("ESP", 4483362458)
espTab:CreateToggle({
	Name = "Enable ESP (Items & Mobs)",
	CurrentValue = false,
	Flag = "ESPAllToggle",
	Callback = function(enabled)
		isEspEnabled = enabled;
		if enabled then
			updateAllEsp()
			task.spawn(espLoop)
		else
			clearAllEsp()
		end
	end
})
local targetUpdateInterval = 0.4;
local lastTargetUpdateTime = 0;
RunService.Heartbeat:Connect(function(deltaTime)
	lastTargetUpdateTime = lastTargetUpdateTime + deltaTime;
	if lastTargetUpdateTime >= targetUpdateInterval then
		updateTargetList()
		lastTargetUpdateTime = 0
	end;
	if isAimbotEnabled then
		local target = getClosestTargetToCrosshair()
		if target then
			local predictedPosition = predictTargetPosition(target)
			aimAtPosition(predictedPosition)
		end
	end
end)
Workspace.DescendantAdded:Connect(function(descendant)
	if isValidTarget(descendant) and not table.find(targetList, descendant) then
		table.insert(targetList, descendant)
		descendant.Humanoid.Died:Connect(function()
			for i = #targetList, 1, -1 do
				if targetList[i] == descendant then
					table.remove(targetList, i)
					break
				end
			end
		end)
	end
end)
Workspace.DescendantRemoving:Connect(function(descendant)
	if isValidTarget(descendant) then
		for i = #targetList, 1, -1 do
			if targetList[i] == descendant then
				table.remove(targetList, i)
				break
			end
		end
	end
end)
