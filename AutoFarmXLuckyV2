repeat
	task.wait()
until game:IsLoaded() and game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.Character;
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Player = Players.LocalPlayer;
local Character = Player.Character or Player.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")
if not Player.PlayerGui:FindFirstChild("HUD") then
	local HUD = ReplicatedStorage.Objects.HUD:Clone()
	HUD.Parent = Player.PlayerGui
end;
if Player.PlayerGui:FindFirstChild("LoadingScreen1") then
	Player.PlayerGui:FindFirstChild("LoadingScreen1"):Destroy()
end;
if Player.PlayerGui:FindFirstChild("LoadingScreen") then
	Player.PlayerGui:FindFirstChild("LoadingScreen"):Destroy()
end;
if Character:FindFirstChild("RemoteEvent") then
	Character.RemoteEvent:FireServer("PressedPlay")
end;
getgenv().Stuff = {
	TeleportBypass = true,
	ItemMagnitudeBypass = true,
	CrashBypass = true,
	AutoFarm = true,
	AutoSell = true,
	PurchaseLucky = true
}
local blacklist = {
	"Disc",
	"Bone",
	"Arm",
	"Umbrella",
	"Scythe",
	"Scyth",
	"Pluck",
	"Ligh",
	"Tea",
	"Bow",
	"Koichi",
	"Requiem",
	"Baby",
	"Redemmed",
	"Lucky",
	"Luck"
}
local function isBlacklisted(toolName)
	for _, word in ipairs(blacklist) do
		if string.find(toolName, word) then
			return true
		end
	end;
	return false
end;
local function TeleportBypass()
	if getgenv().Stuff.TeleportBypass then
		local OldNamecallTP;
		OldNamecallTP = hookmetamethod(game, "__namecall", function(self, ...)
			local args = {
				...
			}
			local method = getnamecallmethod()
			if method == "InvokeServer" and args[1] == "idklolbrah2de" then
				return "  ___XP DE KEY"
			end;
			return OldNamecallTP(self, ...)
		end)
	end
end;
local function ItemMagnitudeBypass()
	if getgenv().Stuff.ItemMagnitudeBypass then
		local OldIndexItem;
		OldIndexItem = hookmetamethod(Player.Character.PrimaryPart.Position, "__index", function(self, key)
			if not checkcaller() and key:lower() == "magnitude" and getcallingscript().Name == "ItemSpawn" then
				return 0
			end;
			return OldIndexItem(self, key)
		end)
	end
end;
local function CrashBypass()
	if getgenv().Stuff.CrashBypass then
		local FunctionLibrary = require(ReplicatedStorage:WaitForChild("Modules").FunctionLibrary)
		local OldPcall = FunctionLibrary.pcall;
		FunctionLibrary.pcall = function(...)
			local f = ...
			if type(f) == "function" and #getupvalues(f) == 11 then
				return
			end;
			return OldPcall(...)
		end
	end
end;
local function RandomEquipTool()
	task.spawn(function()
		while getgenv().Stuff.AutoFarm and Character and Humanoid do
			local Backpack = Player:FindFirstChild("Backpack")
			if Backpack then
				local tools = {}
				for _, v in ipairs(Backpack:GetChildren()) do
					if v:IsA("Tool") and not isBlacklisted(v.Name) then
						table.insert(tools, v)
					end
				end;
				if #tools > 0 then
					local tool = tools[math.random(1, #tools)]
					pcall(function()
						Humanoid:EquipTool(tool)
					end)
				end
			end;
			task.wait(1)
		end
	end)
end;
local function AutoSell()
	task.spawn(function()
		while getgenv().Stuff.AutoSell do
			local Living = workspace:FindFirstChild("Living")
			if Living then
				local Target = Living:FindFirstChild(Player.Name)
				if Target then
					local Event = Target:FindFirstChild("RemoteEvent")
					if Event then
						pcall(function()
							Event:FireServer("EndDialogue", {
								NPC = "Merchant",
								Option = "Option2",
								Dialogue = "Dialogue5"
							})
						end)
					end
				end
			end;
			task.wait(0.8)
		end
	end)
end;
local Config = {
	MaxStore = 2600,
	CheckInterval = 4,
	TeleportInterval = 2
}
local function ServerHop()
	task.wait(2)
	local PlaceId = game.PlaceId;
	local JobId = game.JobId;
	local RootFolder = "ServerHop"
	local StorageFile = RootFolder .. "/" .. tostring(PlaceId) .. ".json"
	local Data = {
		Start = tick(),
		Jobs = {}
	}
	if not isfolder(RootFolder) then
		makefolder(RootFolder)
	end;
	if isfile(StorageFile) then
		local ok, NewData = pcall(function()
			return HttpService:JSONDecode(readfile(StorageFile))
		end)
		if ok and NewData and tick() - NewData.Start < Config.MaxStore then
			Data = NewData
		end
	end;
	if not table.find(Data.Jobs, JobId) then
		table.insert(Data.Jobs, JobId)
	end;
	writefile(StorageFile, HttpService:JSONEncode(Data))
	local Servers = {}
	local Cursor = ""
	while true do
		local url = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true&cursor=%s"):format(PlaceId, Cursor)
		local success, response = pcall(function()
			return game:HttpGet(url)
		end)
		if success then
			local decodeSuccess, body = pcall(function()
				return HttpService:JSONDecode(response)
			end)
			if decodeSuccess and body and body.data then
				for _, server in ipairs(body.data) do
					if type(server) == "table" and server.id and tonumber(server.playing) and tonumber(server.maxPlayers) and server.playing < server.maxPlayers and not table.find(Data.Jobs, server.id) then
						table.insert(Servers, server.id)
					end
				end;
				Cursor = body.nextPageCursor or nil;
				if not Cursor then
					break
				end
			else
				break
			end
		else
			break
		end;
		task.wait(Config.CheckInterval)
	end;
	if #Servers > 0 then
		TeleportService:TeleportToPlaceInstance(PlaceId, Servers[math.random(1, #Servers)], Player)
	else
		TeleportService:Teleport(PlaceId, Player)
	end
end;
getgenv().ServerHop = ServerHop;
local function findItem(itemName)
	local ItemsDict = {
		["Position"] = {},
		["ProximityPrompt"] = {},
		["Items"] = {}
	}
	for _, item in pairs(workspace.Item_Spawns.Items:GetChildren()) do
		if item:FindFirstChild("MeshPart") and item.ProximityPrompt.ObjectText == itemName then
			if item.ProximityPrompt.MaxActivationDistance == 8 then
				table.insert(ItemsDict["Items"], item.ProximityPrompt.ObjectText)
				table.insert(ItemsDict["ProximityPrompt"], item.ProximityPrompt)
				table.insert(ItemsDict["Position"], item.MeshPart.CFrame)
			end
		end
	end;
	return ItemsDict
end;
local function AutoFarmItems()
	task.spawn(function()
		while getgenv().Stuff.AutoFarm and Character and HRP do
			local items = workspace.Item_Spawns.Items:GetChildren()
			for _, Item in pairs(items) do
				if Item:IsA("Model") then
					HRP.CFrame = Item.PrimaryPart.CFrame + Vector3.new(0, 3, 0)
					task.wait(1)
					local Prompt = Item:FindFirstChildOfClass("ProximityPrompt")
					if Prompt then
						fireproximityprompt(Prompt)
						task.wait(0.8)
					end
				end
			end;
			task.wait(0.1)
		end
	end)
end;
local function CountLuckyArrows()
	local count = 0;
	local Backpack = Player:FindFirstChild("Backpack")
	if Backpack then
		for _, tool in ipairs(Backpack:GetChildren()) do
			if tool:IsA("Tool") and tool.Name == "Lucky Arrow" then
				count += 1
			end
		end
	end;
	return count
end;
local function AutoPurchaseLuckyArrow()
	task.spawn(function()
		while getgenv().Stuff.PurchaseLucky do
			if CountLuckyArrows() < 9 then
				local Living = workspace:FindFirstChild("Living")
				if Living then
					local Target = Living:FindFirstChild(Player.Name)
					if Target then
						local Event = Target:FindFirstChild("RemoteEvent")
						if Event then
							Event:FireServer("PurchaseShopItem", {
								["ItemName"] = "1x Lucky Arrow"
							})
						end
					end
				end
			end;
			task.wait(1)
		end
	end)
end;
task.spawn(function()
	while true do
		if getgenv().Stuff.AutoFarm and Character and HRP then
			local items = workspace.Item_Spawns.Items:GetChildren()
			local modelCount = 0;
			for _, item in pairs(items) do
				if item:IsA("Model") then
					modelCount += 1
				end
			end;
			if modelCount <= 1 then
				HRP.CFrame = CFrame.new(298, -33, 165)
				for i = 0, 2 do
					task.wait(1.5)
				end;
				getgenv().ServerHop()
				break
			end
		end;
		task.wait(0.5)
	end
end)
TeleportBypass()
ItemMagnitudeBypass()
CrashBypass()
AutoFarmItems()
RandomEquipTool()
AutoSell()
AutoPurchaseLuckyArrow()
Player.CharacterAdded:Connect(function(newChar)
	Character = newChar;
	HRP = newChar:WaitForChild("HumanoidRootPart")
	Humanoid = newChar:WaitForChild("Humanoid")
	task.wait(3)
	AutoFarmItems()
	RandomEquipTool()
	AutoSell()
	AutoPurchaseLuckyArrow()
	if newChar:FindFirstChild("RemoteEvent") then
		newChar.RemoteEvent:FireServer("PressedPlay")
	end
end)
