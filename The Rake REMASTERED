if game.GameId ~= 847722000 then
	return
end;
if getgenv().RakeGui then
	return
end;
getgenv().RakeGui = true;
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local PathfindingService = game:GetService("PathfindingService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer;
local mouse = localPlayer:GetMouse()
local currentCamera = Workspace.CurrentCamera;
local isGuiActive = true;
getgenv().FreeCam = false;
getgenv().FreeCamSpeed = 0.2;
getgenv().NoFog = false;
getgenv().InfStamina = false;
getgenv().InfNightVision = false;
getgenv().RakeKillAura = false;
getgenv().RakeChams = false;
getgenv().PlayerESP = false;
getgenv().PlayerESPShowDistance = false;
getgenv().FlareGunESP = false;
getgenv().SupplyDropESP = false;
getgenv().LocationESP = false;
getgenv().ScrapESP = false;
getgenv().NoFallDMG = false;
getgenv().InstaOpenSupplyDrop = false;
getgenv().enableFOV = false;
getgenv().FieldOfView = 70;
getgenv().enableSpeed = false;
getgenv().WalkSpeed = 16;
if syn then
	StarterGui:SetCore("SendNotification", {
		Title = "Info",
		Text = "The Rake 01.03.2025",
		Duration = 1
	})
else
	StarterGui:SetCore("SendNotification", {
		Title = "Info",
		Text = "Good Luck",
		Duration = 1
	})
end;
local hidePart = Instance.new("Part")
hidePart.Size = Vector3.new(20, 1000, 20)
hidePart.Position = Vector3.new(0, 10000, 0)
hidePart.Anchored = true;
hidePart.CanCollide = false;
hidePart.Transparency = 1;
hidePart.Parent = Workspace;
local hidePartHighlight = Instance.new("Highlight", hidePart)
hidePartHighlight.Name = "HidePartHighlight"
hidePartHighlight.FillColor = Color3.new(1, 1, 1)
hidePartHighlight.OutlineColor = Color3.fromRGB(170, 0, 0)
hidePartHighlight.FillTransparency = 0.8;
hidePartHighlight.OutlineTransparency = 0.8;
hidePartHighlight.Enabled = false;
local freeCamPart = Instance.new("Part")
freeCamPart.Anchored = true;
freeCamPart.Size = Vector3.new(1, 1, 1)
freeCamPart.CFrame = CFrame.new(0, 10000, 0)
freeCamPart.Transparency = 1;
freeCamPart.Name = "FreeCamPart"
freeCamPart.Parent = Workspace;
local function getLocalPlayerHumanoid()
	return localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid")
end;
local function getHumanoidRootPart()
	return localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
end;
local function setPlayerPosition(cframe)
	local rootPart = getHumanoidRootPart()
	if rootPart then
		rootPart.CFrame = cframe
	end
end;
local function createHighlight(parent, adornee, color, transparency)
	local highlight = Instance.new("Highlight")
	highlight.Adornee = adornee;
	highlight.FillColor = color;
	highlight.FillTransparency = transparency;
	highlight.OutlineColor = Color3.new(1, 1, 1)
	highlight.OutlineTransparency = 0.8;
	highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop;
	highlight.Parent = parent;
	return highlight
end;
local function createTextLabel(text)
	local drawing = Drawing.new("Text")
	drawing.Visible = false;
	drawing.Center = true;
	drawing.Outline = false;
	drawing.Font = 2;
	drawing.Size = 12;
	drawing.Text = text;
	return drawing
end;
local function updateEspLabel(label, targetPart)
	if not targetPart or not targetPart.Parent then
		label.Visible = false;
		return
	end;
	local vector, onScreen = currentCamera:WorldToViewportPoint(targetPart.Position)
	if onScreen then
		label.Position = Vector2.new(vector.X, vector.Y)
		label.Visible = true
	else
		label.Visible = false
	end
end;
local uiLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Rayfield-backup/main/Rayfield"))()
local mainWindow = uiLibrary:CreateWindow({
	Name = "MoonLight [The Rake]",
	LoadingTitle = "MoonLight",
	LoadingSubtitle = "MoonHub",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "MoonTheRake",
		FileName = "Moon"
	}
})
local mainTab = mainWindow:CreateTab("Main", 11252440515)
local playerTab = mainWindow:CreateTab("Player", 4483345998)
local cheatsTab = mainWindow:CreateTab("Cheats", 11252440817)
local otherTab = mainWindow:CreateTab("Other", 11252440305)
mainTab:CreateToggle({
	Name = "Inf Stamina",
	CurrentValue = false,
	Flag = "InfStamina",
	Callback = function(value)
		getgenv().InfStamina = value;
		if value then
			for _, obj in pairs(getgc(true)) do
				if type(obj) == "table" and rawget(obj, "STAMINA_REGEN") then
					obj.STAMINA_REGEN = 100;
					obj.JUMP_STAMINA = 0;
					obj.JUMP_COOLDOWN = 0;
					obj.STAMINA_TAKE = 0
				end
			end
		end
	end
})
mainTab:CreateToggle({
	Name = "Inf Night Vision",
	CurrentValue = false,
	Flag = "InfNightVision",
	Callback = function(value)
		getgenv().InfNightVision = value;
		if value then
			for _, obj in pairs(getgc(true)) do
				if type(obj) == "table" and rawget(obj, "NVG_TAKE") then
					obj.NVG_TAKE = 0;
					obj.NVG_REGEN = 100
				end
			end
		end
	end
})
mainTab:CreateToggle({
	Name = "No Fall Damage",
	CurrentValue = false,
	Flag = "NoFallDamage",
	Callback = function(v)
		getgenv().NoFallDMG = v
	end
})
mainTab:CreateSlider({
	Name = "Field Of View",
	Range = {
		0,
		120
	},
	Increment = 1,
	CurrentValue = 70,
	Flag = "FOV",
	Callback = function(v)
		getgenv().FieldOfView = v
	end
})
mainTab:CreateToggle({
	Name = "Toggle FOV",
	CurrentValue = false,
	Flag = "tglFOV",
	Callback = function(v)
		getgenv().enableFOV = v
	end
})
mainTab:CreateSlider({
	Name = "WalkSpeed",
	Range = {
		0,
		30
	},
	Increment = 1,
	CurrentValue = 16,
	Flag = "walkspeed",
	Callback = function(v)
		getgenv().WalkSpeed = v
	end
})
mainTab:CreateToggle({
	Name = "Toggle WalkSpeed",
	CurrentValue = false,
	Flag = "tglSpeed",
	Callback = function(v)
		getgenv().enableSpeed = v
	end
})
playerTab:CreateToggle({
	Name = "FreeCam",
	CurrentValue = false,
	Flag = "freeCam",
	Callback = function(value)
		getgenv().FreeCam = value;
		local rootPart = getHumanoidRootPart()
		if not rootPart then
			return
		end;
		if getgenv().FreeCam then
			freeCamPart.CFrame = localPlayer.Character.Head.CFrame;
			rootPart.Anchored = true;
			currentCamera.CameraType = Enum.CameraType.Scriptable;
			currentCamera.CameraSubject = freeCamPart;
			local function tweenPart(duration, part, targetCFrame)
				local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Linear)
				local tween = TweenService:Create(part, tweenInfo, {
					CFrame = targetCFrame
				})
				tween:Play()
			end;
			while getgenv().FreeCam and isGuiActive do
				freeCamPart.CFrame = CFrame.new(freeCamPart.Position, mouse.Hit.Position)
				local speed = getgenv().FreeCamSpeed;
				local moveInterval = 0.04;
				if UserInputService:IsKeyDown(Enum.KeyCode.W) then
					tweenPart(moveInterval, freeCamPart, freeCamPart.CFrame + (freeCamPart.CFrame.LookVector * speed))
				end;
				if UserInputService:IsKeyDown(Enum.KeyCode.S) then
					tweenPart(moveInterval, freeCamPart, freeCamPart.CFrame + (freeCamPart.CFrame.LookVector * -speed))
				end;
				if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
					tweenPart(moveInterval, freeCamPart, freeCamPart.CFrame + Vector3.new(0, speed, 0))
				end;
				if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
					tweenPart(moveInterval, freeCamPart, freeCamPart.CFrame + Vector3.new(0, -speed, 0))
				end;
				task.wait()
			end;
			rootPart.Anchored = false;
			currentCamera.CameraType = Enum.CameraType.Custom;
			currentCamera.CameraSubject = localPlayer.Character.Head
		end
	end
})
playerTab:CreateSlider({
	Name = "FreeCam Speed",
	Range = {
		0.01,
		20
	},
	Increment = 0.01,
	CurrentValue = 0.2,
	Flag = "Speed",
	Callback = function(v)
		getgenv().FreeCamSpeed = v
	end
})
playerTab:CreateToggle({
	Name = "No Fog",
	CurrentValue = false,
	Flag = "NoFog",
	Callback = function(v)
		getgenv().NoFog = v;
		if not v then
			ReplicatedStorage.CurrentLightingProperties.FogEnd.Value = 75
		end
	end
})
playerTab:CreateButton({
	Name = "Third Person",
	Callback = function()
		if localPlayer.Character and localPlayer.Character:FindFirstChild("RagdollTime") then
			local rs = localPlayer.Character.RagdollTime.RagdollSwitch;
			rs.Value = true;
			task.wait()
			rs.Value = false
		end
	end
})
playerTab:CreateToggle({
	Name = "Rake Chams",
	CurrentValue = false,
	Flag = "RakeChams",
	Callback = function(v)
		getgenv().RakeChams = v
	end
})
playerTab:CreateToggle({
	Name = "Player ESP",
	CurrentValue = false,
	Flag = "PlrEsp",
	Callback = function(v)
		getgenv().PlayerESP = v
	end
})
playerTab:CreateToggle({
	Name = "Show Distance Travelled",
	CurrentValue = false,
	Flag = "ShowDistanceTravelled",
	Callback = function(v)
		getgenv().PlayerESPShowDistance = v
	end
})
playerTab:CreateToggle({
	Name = "Flare Gun ESP",
	CurrentValue = false,
	Flag = "FlareGunESP",
	Callback = function(v)
		getgenv().FlareGunESP = v
	end
})
playerTab:CreateToggle({
	Name = "SupplyDrop ESP",
	CurrentValue = false,
	Flag = "SupplyDropESP",
	Callback = function(v)
		getgenv().SupplyDropESP = v
	end
})
playerTab:CreateToggle({
	Name = "Location ESP",
	CurrentValue = false,
	Flag = "LocationESP",
	Callback = function(v)
		getgenv().LocationESP = v
	end
})
playerTab:CreateToggle({
	Name = "Scrap ESP",
	CurrentValue = false,
	Flag = "ScrapESP",
	Callback = function(v)
		getgenv().ScrapESP = v
	end
})
local rakeAuraToggle = cheatsTab:CreateToggle({
	Name = "Rake Killaura",
	CurrentValue = false,
	Flag = "RakeAura",
	Callback = function(value)
		getgenv().RakeKillAura = value;
		uiLibrary:Notify({
			Title = "Rake Killaura",
			Content = "Rake Killaura: " .. tostring(value),
			Duration = 1,
			Image = 4483362458
		})
		if value then
			while getgenv().RakeKillAura and isGuiActive do
				pcall(function()
					local rake = Workspace:FindFirstChild("Rake")
					local rootPart = getHumanoidRootPart()
					if rake and rootPart and (rake.HumanoidRootPart.Position - rootPart.Position).Magnitude < 200 then
						local stunStick = localPlayer.Character:FindFirstChild("StunStick")
						if stunStick then
							stunStick.Event:FireServer("S")
							task.wait()
							stunStick.Event:FireServer("H", rake.HumanoidRootPart)
						end
					end
				end)
				task.wait(0.1)
			end
		end
	end
})
cheatsTab:CreateKeybind({
	Name = "Toggle Killaura",
	CurrentKeybind = "R",
	HoldToInteract = false,
	Flag = "KillAuraKeybind",
	Callback = function()
		rakeAuraToggle:Set(not getgenv().RakeKillAura)
	end
})
cheatsTab:CreateButton({
	Name = "Bring Scraps",
	Callback = function()
		for _, d in pairs(Workspace.Filter.ScrapSpawns:GetDescendants()) do
			if d.Name:lower() == "scrap" then
				d:PivotTo(localPlayer.Character:GetPivot())
			end
		end
	end
})
cheatsTab:CreateButton({
	Name = "Remove Invis Walls",
	Callback = function()
		for _, c in pairs(Workspace.Filter.InvisibleWalls:GetChildren()) do
			if c.Name:lower():match("invis") then
				c:Destroy()
			end
		end
	end
})
cheatsTab:CreateToggle({
	Name = "Hide",
	CurrentValue = false,
	Flag = "Hide",
	Callback = function(value)
		local rootPart = getHumanoidRootPart()
		if not rootPart then
			return
		end;
		if value then
			rootPart.Anchored = true;
			setPlayerPosition(rootPart.CFrame + Vector3.new(0, -15, 0))
			hidePart.Position = rootPart.Position + Vector3.new(0, -505, 0)
			hidePartHighlight.Adornee = hidePart;
			hidePartHighlight.Enabled = true
		else
			setPlayerPosition(rootPart.CFrame + Vector3.new(0, 15, 0))
			rootPart.Anchored = false;
			hidePartHighlight.Adornee = nil;
			hidePartHighlight.Enabled = false
		end
	end
})
cheatsTab:CreateToggle({
	Name = "Insta Open SupplyDrop",
	CurrentValue = false,
	Flag = "InstaOpenSupplyDrop",
	Callback = function(v)
		getgenv().InstaOpenSupplyDrop = v
	end
})
local rakeTargetLabel = cheatsTab:CreateLabel("Rake's Target: None")
local timerLabel = cheatsTab:CreateLabel("Time Until Day/Night:")
otherTab:CreateButton({
	Name = "Destroy Gui",
	Callback = function()
		isGuiActive = false;
		pcall(function()
			freeCamPart:Destroy()
			hidePart:Destroy()
			for _, player in pairs(Players:GetPlayers()) do
				if player.Character then
					local highlight = player.Character:FindFirstChild("PlayerChams")
					if highlight then
						highlight:Destroy()
					end
				end
			end;
			getgenv().RakeGui = false;
			uiLibrary:Destroy()
		end)
	end
})
local gameMetatable = getrawmetatable(game)
local originalNamecall = gameMetatable.__namecall;
setreadonly(gameMetatable, false)
gameMetatable.__namecall = function(self, ...)
	if getgenv().NoFallDMG and getnamecallmethod() == "FireServer" and tostring(self) == "FD_Event" then
		local args = {
			...
		}
		args[1], args[2] = 0, 0;
		return self.FireServer(self, unpack(args))
	end;
	return originalNamecall(self, ...)
end;
setreadonly(gameMetatable, true)
local locations = {
	Power_Station = {
		Position = Vector3.new(-281.68, 21.50, -212.74),
		Label = nil
	},
	Safe_House = {
		Position = Vector3.new(-363.49, 16.87, 70.30),
		Label = nil
	},
	Base_Camp = {
		Position = Vector3.new(-70.71, 17.61, 209.00),
		Label = nil
	},
	Shop = {
		Position = Vector3.new(-25.15, 17.20, -258.36),
		Label = nil
	}
}
RunService.Heartbeat:Connect(function()
	if not isGuiActive then
		return
	end;
	if getgenv().NoFog then
		ReplicatedStorage.CurrentLightingProperties.FogEnd.Value = 387420489
	end;
	if getgenv().RakeKillAura then
		pcall(function()
			if Workspace:FindFirstChild("Rake") then
				localPlayer.Character.StunStick.HitPart.Position = Workspace.Rake.HumanoidRootPart.Position
			end
		end)
	end;
	if getgenv().InstaOpenSupplyDrop then
		pcall(function()
			local box = Workspace.Debris.SupplyCrates.Box;
			if box then
				box.UnlockValue.Value = 100;
				box.GUIPart.ProximityPrompt:SetAttribute("isUnlocking", false)
			end
		end)
	end;
	timerLabel:Set(ReplicatedStorage.Night.Value and "Time Until Day: " .. ReplicatedStorage.Timer.Value or "Time Until Night: " .. ReplicatedStorage.Timer.Value)
	pcall(function()
		rakeTargetLabel:Set("Rake's Target: " .. tostring(Workspace.Rake.TargetVal.Value.Parent))
	end)
	if ReplicatedStorage.InitiateBloodHour.Value then
		uiLibrary:Notify({
			Title = "ALERT",
			Content = "BLOOD HOUR IS STARTING!",
			Duration = 5,
			Image = 4483362458
		})
		ReplicatedStorage.InitiateBloodHour.Value = false
	end;
	local rake = Workspace:FindFirstChild("Rake")
	if rake then
		local highlight = rake:FindFirstChild("RakeChams")
		local textLabel = rake:FindFirstChild("RakeESP") and rake.RakeESP:FindFirstChild("Label")
		if getgenv().RakeChams then
			if not highlight then
				highlight = createHighlight(rake, rake, Color3.fromRGB(170, 0, 0), 0.3)
				highlight.Name = "RakeChams"
			end;
			if not textLabel then
				local billboardGui = Instance.new("BillboardGui", rake)
				billboardGui.Name = "RakeESP"
				billboardGui.AlwaysOnTop = true;
				billboardGui.Size = UDim2.new(0, 100, 0, 50)
				billboardGui.Adornee = rake:FindFirstChild("Head")
				textLabel = Instance.new("TextLabel", billboardGui)
				textLabel.Name = "Label"
				textLabel.BackgroundTransparency = 1;
				textLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
				textLabel.Font = Enum.Font.SourceSans;
				textLabel.Size = UDim2.new(1, 0, 1, 0)
			end;
			highlight.Enabled = true;
			textLabel.Parent.Enabled = true;
			textLabel.Text = string.format("Rake\nHealth: %.0f", rake.Monster.Health.Value)
		else
			if highlight then
				highlight.Enabled = false
			end;
			if textLabel then
				textLabel.Parent.Enabled = false
			end
		end
	end;
	for _, player in pairs(Players:GetPlayers()) do
		if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Head") then
			local highlight = player.Character:FindFirstChild("PlayerChams")
			local espHolder = player.Character:FindFirstChild("PlayerESP")
			local textLabel = espHolder and espHolder:FindFirstChild("Label")
			if getgenv().PlayerESP then
				if not highlight then
					highlight = createHighlight(player.Character, player.Character, Color3.fromRGB(0, 11, 170), 0.3)
					highlight.Name = "PlayerChams"
				end;
				if not textLabel then
					local billboardGui = Instance.new("BillboardGui", player.Character)
					billboardGui.Name = "PlayerESP"
					billboardGui.AlwaysOnTop = true;
					billboardGui.Size = UDim2.new(0, 150, 0, 50)
					billboardGui.Adornee = player.Character.Head;
					textLabel = Instance.new("TextLabel", billboardGui)
					textLabel.Name = "Label"
					textLabel.BackgroundTransparency = 1;
					textLabel.TextColor3 = Color3.fromRGB(0, 255, 34)
					textLabel.Font = Enum.Font.SourceSans;
					textLabel.Size = UDim2.new(1, 0, 1, 0)
				end;
				highlight.Enabled = true;
				textLabel.Parent.Enabled = true;
				textLabel.Text = player.Name .. (getgenv().PlayerESPShowDistance and string.format("\nDist Travelled: %.0f", player.DistanceTravelled.Value) or "")
			else
				if highlight then
					highlight.Enabled = false
				end;
				if textLabel then
					textLabel.Parent.Enabled = false
				end
			end
		end
	end;
	local flareGun = Workspace:FindFirstChild("FlareGunPickUp")
	if flareGun then
		local highlight = flareGun:FindFirstChild("FlareGunChams")
		if getgenv().FlareGunESP then
			if not highlight then
				highlight = createHighlight(flareGun, flareGun, Color3.fromRGB(255, 0, 0), 0.3)
				highlight.Name = "FlareGunChams"
			end;
			highlight.Enabled = true
		elseif highlight then
			highlight.Enabled = false
		end
	end;
	for _, crate in pairs(Workspace.Debris.SupplyCrates:GetChildren()) do
		if crate.Name == "Box" then
			local highlight = crate:FindFirstChild("SupplyDropChams")
			if getgenv().SupplyDropESP then
				if not highlight then
					highlight = createHighlight(crate, crate, Color3.fromRGB(0, 255, 0), 0.3)
					highlight.Name = "SupplyDropChams"
				end;
				highlight.Enabled = true
			elseif highlight then
				highlight.Enabled = false
			end
		end
	end;
	for _, scrap in pairs(Workspace.Filter.ScrapSpawns:GetDescendants()) do
		if scrap.Name == "Scrap" then
			local highlight = scrap:FindFirstChild("ScrapChams")
			if getgenv().ScrapESP then
				if not highlight then
					highlight = createHighlight(scrap, scrap, Color3.fromRGB(77, 35, 1), 0)
					highlight.Name = "ScrapChams"
				end;
				highlight.Enabled = true
			elseif highlight then
				highlight.Enabled = false
			end
		end
	end;
	for name, data in pairs(locations) do
		if getgenv().LocationESP then
			if not data.Label then
				data.Label = createTextLabel("[LOCATION] " .. name:gsub("_", " "))
				data.Label.Color = Color3.fromRGB(255, 136, 0)
			end;
			updateEspLabel(data.Label, {
				Position = data.Position
			})
		elseif data.Label then
			data.Label.Visible = false
		end
	end
end)
RunService.RenderStepped:Connect(function()
	if not isGuiActive then
		return
	end;
	if getgenv().enableFOV then
		local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear)
		local goal = {
			FieldOfView = tonumber(getgenv().FieldOfView)
		}
		TweenService:Create(currentCamera, tweenInfo, goal):Play()
	end;
	local humanoid = getLocalPlayerHumanoid()
	if getgenv().enableSpeed and humanoid then
		humanoid.WalkSpeed = tonumber(getgenv().WalkSpeed)
	end
end)
uiLibrary:LoadConfiguration()
